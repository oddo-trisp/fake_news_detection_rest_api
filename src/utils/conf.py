# Resource related properties

TRAIN_DATASET = 'train.csv'
TEST_DATASET = 'test.csv'
ROC_PLOT_FILE = 'roc_10fold'
EVALUATION_METRIC_FILE = 'evaluation_metrics_10fold'

RESOURCES_PATH = 'resources/'

INPUT_PATH = RESOURCES_PATH + 'input/'
OUTPUT_PATH = RESOURCES_PATH + 'output/'
PIPELINE_PATH = RESOURCES_PATH + 'pipeline/'
MODELS_PATH = PIPELINE_PATH + 'models/'
PARAMS_PATH = PIPELINE_PATH + 'params/'
METRICS_PATH = RESOURCES_PATH + 'metrics/'

TRAIN_PATH = INPUT_PATH + TRAIN_DATASET
TEST_PATH = INPUT_PATH + TEST_DATASET
ROC_PLOT_PATH = OUTPUT_PATH + ROC_PLOT_FILE
EVALUATION_METRIC_PATH = OUTPUT_PATH + EVALUATION_METRIC_FILE

FORMAT_CSV = '.csv'
FORMAT_PICKLE = '.pkl'
FORMAT_SAV = '.sav'
FORMAT_H5 = '.h5'
FORMAT_PNG = '.png'

# Languages
ENGLISH = 'english'
GREEK = 'greek'
ARTICLE_LANGUAGE = 'el'

# Classifiers
NEAREST_CENTROID = 'NearestCentroid'
ADA_BOOST = 'AdaBoost'
LOGISTIC_REGRESSION = 'LogisticRegression'
GAUSSIAN_NB = 'GaussianNB'
KNN = 'KNeighbors'
SVM = 'SupportVectorMachine'
EXTRA_TREES = 'ExtraTrees'
RANDOM_FOREST = 'RandomForest'

W2V_MODEL = 'Word2Vec'

# Features
BOW = 'BoW'
TF_IDF = 'TF_IDF'
TRUNC_SVD = 'SVD'
W2V = 'W2V'
PAD_SEQ = 'PAD_SEQ'

# Neural Networks
RNN = 'RNN'
CNN = 'CNN'
KERAS = 'KERAS'

# Pipeline steps
VECT = 'vect'
TFIDF = 'tfidf'
DENSE = 'dense'
SVD = 'svd'
CLF = 'clf'

MAX_FEATURES = 10000
N_GRAM_RANGE = (1, 2)
W2V_NUM_FEATURES = 300
VOCABULARY_SIZE = 5000
MAX_LENGTH = 20
EMBEDDING_SIZE = 40
VERBOSE = 10

CLASSIFICATION_SET = {ADA_BOOST, LOGISTIC_REGRESSION, KNN, SVM, EXTRA_TREES, RANDOM_FOREST, GAUSSIAN_NB}
DEEP_LEARNING_SET = {RNN, CNN}
CLASSIFICATION_FEATURE_SET = {BOW, TF_IDF, TRUNC_SVD, W2V}
DEEP_LEARNING_FEATURE_SET = {W2V, PAD_SEQ}
DENSE_SET = {GAUSSIAN_NB}
